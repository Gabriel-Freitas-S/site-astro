---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Navigation from '../components/Navigation.astro';
import SkillCard from '../components/SkillCard.astro';
import LazyAnimation from '../components/LazyAnimation.astro';
import { getCollection } from 'astro:content';
import { getImage } from 'astro:assets';
import profileImage from '../assets/images/profile.webp';

export const prerender = true;

// Otimizar imagem para OG
const ogImage = await getImage({
    src: profileImage,
    width: 1200,
    height: 630,
    format: 'jpeg',
});

interface Technology {
    name: string;
}

interface Skill {
    title: string;
    technologies: Technology[];
}

const certifications = await getCollection('certifications');

// Agrupar todas as skills por categoria, usando um Map para garantir unicidade
const allSkills = new Map<string, Map<string, Technology>>();

certifications.forEach(cert => {
    cert.data.skills.forEach(skill => {
        if (!allSkills.has(skill.title)) {
            allSkills.set(skill.title, new Map());
        }
        const techMap = allSkills.get(skill.title)!;
        skill.technologies.forEach(tech => {
            // Usa o nome como chave para garantir unicidade
            techMap.set(tech.name, tech);
        });
    });
});

// Converter para o formato necessário para renderização, ordenando as categorias
const skillCategories = Array.from(allSkills.entries())
    .map(([title, techMap]) => ({
        title,
        technologies: Array.from(techMap.values())
    }))
    .sort((a, b) => {
        // Ordenação personalizada das categorias
        const order = [
            "Linguagens",
            "Frontend",
            "Frameworks",
            "Ferramentas",
            "Práticas",
            "Segurança",
            "Conceitos"
        ];
        const indexA = order.indexOf(a.title);
        const indexB = order.indexOf(b.title);
        return indexA - indexB;
    });

const description = `Desenvolvedor de software especializado em desenvolvimento web e mobile, com experiência em React, TypeScript, Node.js e outras tecnologias modernas. Conheça meu trabalho e habilidades.`;

// Metadados estruturados para SEO
const jsonLd = {
    "@context": "https://schema.org",
    "@type": "Person",
    "name": "Gabriel Freitas Souza",
    "jobTitle": "Desenvolvedor de Software",
    "url": "https://gabrielfs.dev",
    "image": ogImage.src,
    "description": description,
    "knowsAbout": skillCategories.map(cat => cat.title),
};
---

<Layout
    title="Gabriel Freitas Souza - Portfolio"
    description={description}
    openGraph={{
        basic: {
            title: "Gabriel Freitas Souza - Portfolio",
            type: "website",
            image: ogImage.src,
        },
        optional: {
            description,
            locale: "pt_BR",
            siteName: "Gabriel Freitas Souza",
        },
    }}
    twitter={{
        card: "summary_large_image",
        site: "@gfreitasdev",
        creator: "@gfreitasdev",
        title: "Gabriel Freitas Souza - Portfolio",
        description,
        image: ogImage.src,
    }}
    structuredData={jsonLd}
>
    <Navigation />
    <Header />
    
    <main id="main-content">
        <section
            class="skills-section"
            aria-labelledby="skills-title"
            data-astro-transition-scope
            transition:animate={{
                forwards: {
                    old: { name: 'fadeOut', duration: '0.2s', easing: 'ease-out' },
                    new: { name: 'fadeIn', duration: '0.2s', easing: 'ease-out' }
                },
                backwards: {
                    old: { name: 'fadeOut', duration: '0.2s', easing: 'ease-out' },
                    new: { name: 'fadeIn', duration: '0.2s', easing: 'ease-out' }
                }
            }}
        >
            <h2 id="skills-title" transition:name="page-title">Habilidades</h2>
            <div class="skills-grid">
                {skillCategories.map((category, index) => (
                    <LazyAnimation
                        className="skill-category"
                        index={index}
                        aria-labelledby={`category-${category.title.toLowerCase()}`}
                        transition:name={`category-${category.title.toLowerCase()}`}
                    >
                        <SkillCard 
                            title={category.title}
                            technologies={category.technologies}
                        />
                    </LazyAnimation>
                ))}
            </div>
        </section>
    </main>
</Layout>

<style>
.skills-section {
    padding: clamp(2rem, 4vw, 4rem) clamp(1rem, 2vw, 2rem);
    max-width: 1200px;
    margin: 0 auto;
}

.skills-section h2 {
    text-align: center;
    margin-bottom: clamp(1.5rem, 4vw, 2.5rem);
    font-size: clamp(1.5rem, 5vw, 2.5rem);
    line-height: 1.3;
    letter-spacing: -0.02em;
}

/* Aplicar gradiente apenas quando não estiver em forced-colors */
@media not (forced-colors: active) {
    .skills-section h2 {
        background: linear-gradient(90deg, var(--accent-primary), var(--accent-secondary));
        -webkit-background-clip: text;
        background-clip: text;
        -webkit-text-fill-color: transparent;
        text-fill-color: transparent;
    }
}

/* Garantir legibilidade em forced-colors */
@media (forced-colors: active) {
    .skills-section h2 {
        color: CanvasText;    }
}

.skills-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(min(100%, 500px), 1fr));
    gap: clamp(1rem, 3vw, 2rem);
    width: 100%;
}

@media (max-width: 640px) {
    .skills-grid {
        grid-template-columns: 1fr;
    }
}
</style>
