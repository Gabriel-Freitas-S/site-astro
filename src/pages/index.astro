---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Navigation from '../components/Navigation.astro';
import SkillPopup from '../components/SkillPopup.astro';
import { Icon } from 'astro-icon/components';
import { getCollection } from 'astro:content';
import type { CollectionEntry } from 'astro:content';

// Mapeamento de habilidades para ícones
const getSkillIcon = (skill: string): string => {
    const skillMap: Record<string, string> = {
        'TypeScript/JavaScript': 'simple-icons:typescript',
        'Dart': 'simple-icons:dart',
        'Rust': 'simple-icons:rust',
        'HTML/CSS': 'simple-icons:html5',
        'React': 'simple-icons:react',
        'Flutter': 'simple-icons:flutter',
        'Astro': 'simple-icons:astro',
        'Git': 'simple-icons:git',
        'Docker': 'simple-icons:docker',
        'VSCode': 'simple-icons:visualstudiocode',
        'Node.js': 'simple-icons:nodedotjs',
        'PostgreSQL': 'simple-icons:postgresql',
        'MongoDB': 'simple-icons:mongodb',
        'Python': 'simple-icons:python',
        'Jenkins': 'simple-icons:jenkins',
        'Jest': 'simple-icons:jest',
        'Figma': 'simple-icons:figma',
        'Android': 'simple-icons:android',
        'Expo': 'simple-icons:expo',
    };
    
    return skillMap[skill] || 'mdi:code-braces';
};

interface Skill {
    name: string;
    certs: CollectionEntry<'certifications'>[];
}

interface SkillCategory {
    title: string;
    skills: Skill[];
}

const certifications = await getCollection('certifications');

const skillCategories: SkillCategory[] = [
    {
        title: "Linguagens",
        skills: [
            { name: "TypeScript/JavaScript", certs: certifications.filter(cert => 
                cert.data.title.toLowerCase().includes('typescript') || 
                cert.data.title.toLowerCase().includes('javascript')) },
            { name: "Dart", certs: certifications.filter(cert => 
                cert.data.title.toLowerCase().includes('dart')) },
            { name: "Rust", certs: certifications.filter(cert => 
                cert.data.title.toLowerCase().includes('rust')) },
            { name: "HTML/CSS", certs: certifications.filter(cert => 
                cert.data.title.toLowerCase().includes('html') ||
                cert.data.title.toLowerCase().includes('css')) }
        ]
    },
    {
        title: "Frameworks",
        skills: [
            { name: "React", certs: certifications.filter(cert => 
                cert.data.title.toLowerCase().includes('react')) },
            { name: "Flutter", certs: certifications.filter(cert => 
                cert.data.courses.some(course => course.name.toLowerCase().includes('flutter'))) },
            { name: "Astro", certs: [] }
        ]
    },
    {
        title: "Ferramentas",
        skills: [
            { name: "Git", certs: certifications.filter(cert => 
                cert.data.title.toLowerCase().includes('git')) },
            { name: "Docker", certs: certifications.filter(cert => 
                cert.data.title.toLowerCase().includes('docker')) },
            { name: "VSCode", certs: certifications.filter(cert => 
                cert.data.title.toLowerCase().includes('vscode')) }
        ]
    }
];

const totalCertifications = skillCategories.reduce((total, category) => {
    return total + category.skills.reduce((sum, skill) => sum + skill.certs.length, 0);
}, 0);

const description = `Desenvolvedor de software especializado em desenvolvimento web e mobile, com ${totalCertifications} certificações em diversas tecnologias e frameworks.`;
---

<Layout 
    title="Gabriel Freitas Souza - Portfolio"
    description={description}
>
    <Navigation />
    <Header />
    
    <main id="main-content">
        <section class="skills-section" aria-labelledby="skills-title">
            <h2 id="skills-title">Habilidades</h2>
            <div class="skills-grid">
                {skillCategories.map(category => (
                    <section 
                        class="skill-category" 
                        aria-labelledby={`category-${category.title.toLowerCase()}`}
                    >
                        <div class="category-header">
                            <h3 id={`category-${category.title.toLowerCase()}`}>
                                {category.title}
                            </h3>
                        </div>
                        <ul class="skill-list" role="list">
                            {category.skills.map(skill => (
                                <li>
                                    <button
                                        class="skill-button"
                                        onclick={`openPopup('popup-${skill.name.toLowerCase().replace(/[^a-z0-9]/g, '-')}')`}
                                        disabled={skill.certs.length === 0}
                                        aria-label={`${skill.name}${skill.certs.length > 0 ? ` - ${skill.certs.length} certificações` : ' - Sem certificações'}`}
                                    >
                                        <div class="skill-content">
                                            <Icon name={getSkillIcon(skill.name)} class="skill-icon" width={20} height={20} />
                                            <span>{skill.name}</span>
                                        </div>
                                        {skill.certs.length > 0 && (
                                            <span class="cert-count" aria-hidden="true">
                                                {skill.certs.length}
                                            </span>
                                        )}
                                    </button>
                                    <SkillPopup skill={skill.name} certifications={skill.certs.map(cert => cert.data)} />
                                </li>
                            ))}
                        </ul>
                    </section>
                ))}
            </div>
        </section>
    </main>
</Layout>

<style>
.skills-section {
    padding: 4rem 2rem;
    max-width: 1200px;
    margin: 0 auto;
    animation: fadeIn 0.5s ease-out;
    will-change: transform, opacity;
    -webkit-font-smoothing: antialiased;
    backface-visibility: hidden;
    transform: translateZ(0);
}

.skills-section h2 {
    text-align: center;
    margin-bottom: 2.5rem;
    font-size: 2.5rem;
    background: linear-gradient(90deg, var(--accent-primary), var(--accent-secondary));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    will-change: transform;
    transform: translateZ(0);
    letter-spacing: -0.02em;
}

.skills-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
    gap: 2rem;
}

.skill-category {
    background: var(--secondary-color);
    border-radius: 12px;
    overflow: hidden;
    border: 1px solid var(--accent-tertiary);
    transition: transform 0.2s ease, box-shadow 0.2s ease;
}

.skill-category:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 12px rgba(var(--text-color-rgb), 0.1);
}

.category-header {
    background: var(--accent-tertiary);
    padding: 1.25rem;
    border-bottom: 1px solid var(--accent-tertiary);
    transition: background-color 0.2s ease;
}

@media (hover: hover) {
    .skill-category:hover {
        transform: translateY(-4px);
        box-shadow: 0 0 15px var(--accent-tertiary);
    }
}

.skill-category h3 {
    font-size: 1.5rem;
    color: var(--text-color);
    margin: 0;
}

.skill-list {
    list-style: none;
    padding: 1.5rem;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 0.8rem;
}

.skill-button {
    width: 100%;
    text-align: left;
    background: none;
    border: 1px solid var(--accent-quaternary);
    color: var(--text-color);
    font-size: 1rem;
    padding: 0.8rem 1.2rem;
    border-radius: 8px;
    cursor: pointer;
    display: flex;
    justify-content: space-between;
    align-items: center;
    transition: all 0.2s ease;
}

.skill-content {
    display: flex;
    align-items: center;
    gap: 0.8rem;
}

.skill-icon {
    color: var(--text-color);
    opacity: 0.9;
}

.skill-button:not(:disabled):hover,
.skill-button:not(:disabled):focus-visible {
    background: var(--accent-quaternary);
    transform: translateX(4px);
}

.skill-button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

.cert-count {
    background: var(--accent-secondary);
    color: white;
    padding: 0.2rem 0.6rem;
    border-radius: 12px;
    font-size: 0.8rem;
}

@keyframes fadeIn {
    from {
        opacity: 0;
        transform: translateY(5px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@media (max-width: 768px) {
    .skills-section {
        animation-duration: 0.3s;
    }
}

@media (max-width: 768px) {
    .skills-section {
        padding: 2rem 1rem;
    }

    .skills-section h2 {
        font-size: 2rem;
    }

    .category-header {
        padding: 1rem;
    }

    .skill-list {
        padding: 1rem;
    }

    .skill-button {
        font-size: 0.95rem;
        padding: 0.7rem 1rem;
    }
}

@media (max-width: 480px) {
    .skills-section h2 {
        font-size: 1.75rem;
    }

    .skill-category h3 {
        font-size: 1.3rem;
    }

    .skill-button {
        font-size: 0.9rem;
        padding: 0.6rem 1rem;
    }
}

@media (prefers-reduced-motion: reduce) {
    .skills-section {
        animation: none;
    }

    .skill-button {
        transition: none;
    }
}
</style>
