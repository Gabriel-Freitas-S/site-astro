 ---
import Layout from '../layouts/Layout.astro';
import Navigation from '../components/Navigation.astro';
import CertificationCard from '../components/CertificationCard.astro';
import SearchBar from '../components/SearchBar.astro';
import LazyAnimation from '../components/LazyAnimation.astro';
import { getCollection } from 'astro:content';

const certifications = await getCollection('certifications');

// Calcular total de horas
const totalHours = certifications.reduce((acc, cert) => {
    const hours = parseInt(cert.data.duration.replace('h', ''));
    return acc + hours;
}, 0);

const description = `Certificações e cursos em desenvolvimento de software, totalizando ${totalHours} horas de estudo em diversas tecnologias e frameworks.`;

// Recuperar o termo de pesquisa da URL
const url = new URL(Astro.request.url);
const searchTerm = (url.searchParams.get('search') || '').toLowerCase();

export const prerender = true;
---

<Layout 
    title="Certificações - Gabriel Freitas Souza"
    description={description}
>
    <Navigation />
    
    <main id="main-content">
        <div class="page-header">
            <h1 transition:name="page-title">Certificações</h1>
            <p class="header-description" transition:name="page-description">
                Total de {totalHours} horas de estudo e aperfeiçoamento profissional
            </p>
        </div>

        <SearchBar initialSearchTerm={searchTerm} />

        <section
            class="certifications-grid"
            aria-label="Lista de certificações"
            data-initial-filter={searchTerm}
        >
            {certifications.map((certification: any, index: number) => (
                <LazyAnimation
                    className="card-wrapper"
                    index={index}
                    data-index={index}
                >
                    <CertificationCard 
                        certification={certification.data}
                        searchTerm={searchTerm}
                    />
                </LazyAnimation>
            ))}
            <p class="no-results hidden">Nenhuma certificação encontrada.</p>
        </section>
    </main>
</Layout>

<style>
.page-header {
    text-align: center;
    margin-block: 2rem 3rem;
    container-type: inline-size;
}

.page-header h1 {
    font-size: clamp(1.5rem, 5cqi, 2.5rem);
    margin-bottom: 0.75rem;
    background: linear-gradient(90deg, var(--accent-primary), var(--accent-secondary));
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    text-fill-color: transparent;
    line-height: 1.3;
}

.header-description {
    color: var(--text-color);
    font-size: clamp(0.9rem, 3cqi, 1.2rem);
    font-weight: 600;
    line-height: 1.4;
    max-width: min(85vw, 600px);
    margin-inline: auto;
}

.certifications-grid {
    display: grid;
    gap: clamp(1rem, 3vw, 2rem);
    margin-block-end: 3rem;
    width: 100%;
    container-type: inline-size;
}

.card-wrapper {
    container-type: inline-size;
    container-name: card;
    opacity: 0;
    transform: translateY(20px);
    animation: fadeIn 0.5s ease forwards;
}

@keyframes fadeIn {
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

@container certifications-grid (min-width: 768px) {
    .certifications-grid {
        grid-template-columns: repeat(auto-fill, minmax(min(100%, 500px), 1fr));
    }
}

.no-results {
    text-align: center;
    padding: 2rem;
    color: var(--text-color);
    opacity: 0.8;
    font-size: 1.1rem;
    grid-column: 1 / -1;
}

/* Ajustes para tema claro */
:global(.light-theme) .header-description {
    color: var(--text-color);
    font-weight: 600;
}

/* Utility Classes */
.hidden {
    display: none !important;
}

/* Reduced Motion */
@media (prefers-reduced-motion: reduce) {
    .card-wrapper {
        animation: none;
        opacity: 1;
        transform: none;
    }
}
</style>

<script>
function shouldShowCard(certification: any, searchTerm: string): boolean {
    if (!searchTerm) return true;
    const term = searchTerm.toLowerCase();

    // Verificar título
    if (certification.title.toLowerCase().includes(term)) return true;

    // Verificar skills
    if (certification.skills.some((skill: any) =>
        skill.technologies.some((tech: any) =>
            tech.name.toLowerCase().includes(term)
        )
    )) return true;

    // Verificar cursos
    if (certification.courses.some((course: any) =>
        course.name.toLowerCase().includes(term)
    )) return true;

    // Verificar conteúdo complementar
    if (certification.complementaryContent?.some((content: any) =>
        content.name.toLowerCase().includes(term)
    )) return true;

    return false;
}

function dispatchSearchEvent(searchTerm: string) {
    document.dispatchEvent(new CustomEvent('certificationSearch', {
        detail: { searchTerm }
    }));
}

// Escutar eventos de filtragem
document.addEventListener('filterCertifications', ((event: CustomEvent) => {
    if (event.detail) {
        dispatchSearchEvent(event.detail.searchTerm || '');
    }
}) as EventListener);

// Inicializar em diferentes eventos
document.addEventListener('astro:page-load', () => {
    const grid = document.querySelector<HTMLElement>('.certifications-grid');
    if (grid?.dataset.initialFilter) {
        dispatchSearchEvent(grid.dataset.initialFilter);
    }
});

document.addEventListener('astro:after-swap', () => {
    const grid = document.querySelector<HTMLElement>('.certifications-grid');
    if (grid?.dataset.initialFilter) {
        dispatchSearchEvent(grid.dataset.initialFilter);
    }
});
</script>