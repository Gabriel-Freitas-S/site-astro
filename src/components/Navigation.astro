---
const navItems = [
    { href: "/", label: "Início" },
    { href: "/certificacoes", label: "Certificações" },
    { href: "/experiencia", label: "Experiência" }
];

const currentPath = Astro.url.pathname;
const isCurrentPage = (href: string) => 
    href === '/' ? currentPath === href : currentPath.startsWith(href);
---

<div class="nav-wrapper" id="nav-wrapper">
    <nav class="navigation" aria-label="Navegação principal">
        <div class="nav-container">
            <button 
                class="menu-toggle" 
                id="menu-toggle" 
                aria-label="Menu principal"
                aria-expanded="false"
                aria-controls="nav-links"
            >
                <span class="hamburger"></span>
            </button>
            
            <ul class="nav-links" id="nav-links">
                {navItems.map(item => (
                    <li class="nav-item">
                        <a 
                            href={item.href}
                            class:list={['nav-link', { active: isCurrentPage(item.href) }]}
                            aria-current={isCurrentPage(item.href) ? "page" : undefined}
                        >
                            {item.label}
                        </a>
                    </li>
                ))}
            </ul>
            
            <div class="nav-actions">
                <a 
                    href="https://github.com/Gabriel-Freitas-S/" 
                    target="_blank" 
                    rel="noopener noreferrer" 
                    class="nav-icon" 
                    aria-label="Perfil no GitHub"
                >
                    <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                        <path d="M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z"/>
                    </svg>
                </a>
                <a 
                    href="https://www.linkedin.com/in/gabriel-freitas-souza/" 
                    target="_blank" 
                    rel="noopener noreferrer" 
                    class="nav-icon" 
                    aria-label="Perfil no LinkedIn"
                >
                    <svg aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                        <path d="M19 0h-14c-2.761 0-5 2.239-5 5v14c0 2.761 2.239 5 5 5h14c2.762 0 5-2.239 5-5v-14c0-2.761-2.238-5-5-5zm-11 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.396-2.586 7-2.777 7 2.476v6.759z"/>
                    </svg>
                </a>
                <button 
                    class="theme-toggle" 
                    id="theme-toggle" 
                    aria-label="Alternar tema"
                >
                    <svg class="sun-icon" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <circle cx="12" cy="12" r="5"/>
                        <line x1="12" y1="1" x2="12" y2="3"/>
                        <line x1="12" y1="21" x2="12" y2="23"/>
                        <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"/>
                        <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"/>
                        <line x1="1" y1="12" x2="3" y2="12"/>
                        <line x1="21" y1="12" x2="23" y2="12"/>
                        <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"/>
                        <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"/>
                    </svg>
                    <svg class="moon-icon" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                        <path d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z"/>
                    </svg>
                </button>
            </div>
        </div>
    </nav>
</div>

<style>
*, *::before, *::after {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

.nav-wrapper {
    --nav-height: clamp(48px, 8vh, 64px);
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 1000;
    height: var(--nav-height);
}

.navigation {
    position: relative;
    height: 100%;
    width: 100%;
    left: 0;
}

.navigation::before {
    content: '';
    position: absolute;
    inset: 0;
    background: var(--background-color);
    opacity: 0.95;
    backdrop-filter: blur(8px);
    -webkit-backdrop-filter: blur(8px);
    border-bottom: 1px solid var(--border-color);
    z-index: -1;
}

.nav-container {
    max-width: var(--container-max-width);
    margin: 0 auto;
    padding: 0 var(--container-padding);
    height: 100%;
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.nav-links {
    display: flex;
    gap: 1rem;
    list-style: none;
    margin: 0;
    padding: 0;
}

.nav-item {
    margin: 0;
    padding: 0;
}

.nav-link {
    color: var(--text-color);
    text-decoration: none;
    font-weight: 500;
    padding: 0.5rem 1rem;
    border-radius: var(--border-radius);
    transition: all 0.2s ease;
    opacity: 0.8;
    display: block;
    width: 100%;
}

.nav-link:hover,
.nav-link:focus-visible {
    opacity: 1;
    background: var(--accent-quaternary);
}

.nav-link.active {
    color: white;
    background: var(--accent-primary);
    opacity: 1;
}

.nav-actions {
    display: flex;
    gap: 0.5rem;
    align-items: center;
}

.nav-icon,
.theme-toggle {
    color: var(--text-color);
    padding: 0.5rem;
    border-radius: var(--border-radius);
    opacity: 0.8;
    display: flex;
    align-items: center;
    justify-content: center;
    min-width: 40px;
    min-height: 40px;
}

.theme-toggle {
    background: none;
    border: none;
    cursor: pointer;
}

.nav-icon:hover,
.nav-icon:focus-visible {
    opacity: 1;
    background: var(--accent-secondary);
    color: white;
}

.theme-toggle:hover,
.theme-toggle:focus-visible {
    opacity: 1;
    background: var(--accent-tertiary);
}

.sun-icon { display: none; }
.moon-icon { display: block; }

:global(.light-theme) .sun-icon { display: block; }
:global(.light-theme) .moon-icon { display: none; }

.menu-toggle {
    display: none;
    background: none;
    border: none;
    padding: 0.5rem;
    cursor: pointer;
    width: 40px;
    height: 40px;
}

.hamburger {
    position: relative;
    display: block;
    width: 20px;
    height: 2px;
    background: var(--text-color);
}

.hamburger::before,
.hamburger::after {
    content: '';
    position: absolute;
    left: 0;
    width: 100%;
    height: 2px;
    background: var(--text-color);
    transition: transform 0.2s ease;
}

.hamburger::before { top: -6px; }
.hamburger::after { top: 6px; }

@media (max-width: 768px) {
    .menu-toggle {
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .nav-links {
        position: fixed;
        top: var(--nav-height);
        left: 0;
        right: 0;
        width: 100%;
        max-width: 100vw;
        box-sizing: border-box;
        height: calc(100vh - var(--nav-height));
        background: var(--background-color);
        flex-direction: column;
        gap: 0;
        transform: translateX(-100%);
        visibility: hidden;
        transition: transform 0.3s ease;
        padding: 0;
        margin: 0;
        overflow-x: hidden;
    }

    .nav-links.active {
        transform: translateX(0);
        visibility: visible;
    }

    .nav-item {
        width: 100%;
        padding: 0.5rem 1rem;
    }

    .nav-link {
        text-align: center;
        padding: 1rem;
        width: calc(100% - 2rem);
        margin: 0 1rem;
    }

    .nav-actions {
        margin-left: auto;
    }

    [aria-expanded="true"] .hamburger {
        background: transparent;
    }

    [aria-expanded="true"] .hamburger::before {
        transform: rotate(45deg) translate(4px, 4px);
    }

    [aria-expanded="true"] .hamburger::after {
        transform: rotate(-45deg) translate(4px, -4px);
    }
}

@media (max-width: 480px) {
    .nav-container {
        padding: 0 1rem;
    }

    .nav-actions {
        gap: 0.25rem;
    }

    .nav-icon,
    .theme-toggle {
        padding: 0.4rem;
    }

    .nav-icon svg,
    .theme-toggle svg {
        width: 20px;
        height: 20px;
    }

    .nav-link {
        width: calc(100% - 1rem);
        margin: 0 0.5rem;
    }
}

@media (prefers-reduced-motion: reduce) {
    .nav-link,
    .nav-links,
    .hamburger,
    .hamburger::before,
    .hamburger::after {
        transition: none !important;
    }
}
</style>

<script>
function toggleMobileMenu(force?: boolean) {
    const menuToggle = document.getElementById('menu-toggle');
    const navLinks = document.getElementById('nav-links');
    
    if (!menuToggle || !navLinks) return;
    
    const isExpanded = force ?? menuToggle.getAttribute('aria-expanded') !== 'true';
    
    menuToggle.setAttribute('aria-expanded', String(isExpanded));
    navLinks.classList.toggle('active', isExpanded);
    document.body.style.overflow = isExpanded ? 'hidden' : '';
}

function toggleTheme() {
    const currentTheme = localStorage.getItem('theme') || 'dark';
    const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
    
    localStorage.setItem('theme', newTheme);
    document.documentElement.classList.toggle('light-theme', newTheme === 'light');
}

document.addEventListener('astro:page-load', () => {
    const menuToggle = document.getElementById('menu-toggle');
    const navLinks = document.getElementById('nav-links');
    const themeToggle = document.getElementById('theme-toggle');
    
    menuToggle?.addEventListener('click', () => toggleMobileMenu());
    
    navLinks?.querySelectorAll('a').forEach(link => {
        link.addEventListener('click', () => toggleMobileMenu(false));
    });

    themeToggle?.addEventListener('click', toggleTheme);

    document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape') {
            toggleMobileMenu(false);
        }
    });
});
</script>