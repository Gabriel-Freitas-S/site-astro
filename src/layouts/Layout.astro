---
import { ViewTransitions } from 'astro:transitions';

interface Props {
    title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="pt">
    <head>
        <meta charset="UTF-8" />
        <meta name="description" content="Portfolio de Gabriel Freitas Souza - Desenvolvedor" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
        <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
        <meta name="generator" content={Astro.generator} />
        <title>{title}</title>
        <ViewTransitions />
        <script is:inline>
            function setTheme() {
                const theme = (() => {
                    if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
                        return localStorage.getItem('theme');
                    }
                    if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
                        return 'dark';
                    }
                    return 'light';
                })();
                
                if (theme === 'light') {
                    document.documentElement.classList.add('light-theme');
                } else {
                    document.documentElement.classList.remove('light-theme');
                }
                
                window.localStorage.setItem('theme', theme);
            }

            // Executar imediatamente
            setTheme();

            // Executar após navegação
            document.addEventListener('astro:after-swap', setTheme);
        </script>
    </head>
    <body>
        <main>
            <slot />
        </main>
    </body>
</html>

<style is:global>
:root {
    --primary-color: #007AFF;
    --background-color: #0A0A0A;
    --text-color: #FFFFFF;
    --text-color-rgb: 255, 255, 255;
    --secondary-color: #2C2C2E;
    --border-color: rgba(255, 255, 255, 0.1);
    --text-color-secondary: #888;
}

:root.light-theme {
    --primary-color: #0066CC;
    --background-color: #FFFFFF;
    --text-color: #1A1A1A;
    --text-color-rgb: 26, 26, 26;
    --secondary-color: #F5F5F7;
    --border-color: rgba(0, 0, 0, 0.1);
    --text-color-secondary: #666;
}

html {
    font-family: 'Inter', system-ui, sans-serif;
    background: var(--background-color);
    color: var(--text-color);
    scroll-behavior: smooth;
    transition: background-color 0.3s ease, color 0.3s ease;
}

body {
    margin: 0;
    padding: 0;
    min-height: 100vh;
}

main {
    max-width: 1200px;
    margin: 0 auto;
    padding: 4rem 2rem 2rem 2rem;
}

@media (max-width: 768px) {
    main {
        padding: 3.5rem 1rem 1rem 1rem;
    }
}

h1, h2, h3, h4, h5, h6 {
    color: var(--text-color);
    margin: 0;
}

p {
    color: var(--text-color);
    line-height: 1.6;
}

.text-secondary {
    color: var(--text-color-secondary);
}

a {
    color: var(--primary-color);
    text-decoration: none;
    transition: color 0.2s ease;
}

a:hover {
    color: color-mix(in srgb, var(--primary-color) 80%, 
        var(--background-color));
}

.card {
    background: var(--secondary-color);
    border-radius: 12px;
    padding: 1.5rem;
    margin-bottom: 1rem;
    transition: transform 0.2s ease, background-color 0.3s ease;
    border: 1px solid var(--border-color);
}

.card:hover {
    transform: translateY(-2px);
}

::selection {
    background: var(--primary-color);
    color: white;
}

.skill-tag:hover {
    background: rgba(var(--text-color-rgb), 0.1);
}

.skill-category {
    border: 1px solid var(--border-color);
}
</style>
</html>
