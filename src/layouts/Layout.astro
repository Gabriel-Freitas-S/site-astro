---
import { ViewTransitions } from 'astro:transitions';
import crypto from 'node:crypto';

interface Props {
    title: string;
    description?: string;
}

const {
    title,
    description = "Portfolio de Gabriel Freitas Souza - Desenvolvedor de software especializado em desenvolvimento web e mobile"
} = Astro.props;

const nonce = crypto.randomUUID();
---

<!doctype html>
<html lang="pt-BR">
    <head>
        <meta charset="UTF-8" />
        <!-- Política de Segurança de Conteúdo (CSP) -->
        <meta http-equiv="Content-Security-Policy" content={`
            default-src 'self';
            script-src 'self' 'nonce-${nonce}' https://www.googletagmanager.com https://*.google-analytics.com;
            style-src 'self' 'unsafe-inline' https://fonts.gstatic.com;
            img-src 'self' data: https: https://*.google-analytics.com;
            font-src 'self' https://fonts.gstatic.com;
            connect-src 'self' https://*.google-analytics.com https://*.analytics.google.com https://stats.g.doubleclick.net;
            frame-src 'none';
            object-src 'none';
            base-uri 'self';
            form-action 'self';
            frame-ancestors 'none';
            upgrade-insecure-requests;
            block-all-mixed-content
        `.replace(/\s+/g, ' ').trim()} />
        <!-- Cabeçalhos de Segurança Adicionais -->
        <meta http-equiv="X-Content-Type-Options" content="nosniff" />
        <meta http-equiv="X-Frame-Options" content="DENY" />
        <meta http-equiv="Referrer-Policy" content="strict-origin-when-cross-origin" />
        <meta http-equiv="Permissions-Policy" content="geolocation=(), camera=(), microphone=()" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <meta name="description" content={description} />
        <meta name="author" content="Gabriel Freitas Souza" />
        <meta name="theme-color" content="#007AFF" />
        <meta name="color-scheme" content="light dark">

        <!-- Open Graph -->
        <meta property="og:title" content={title} />
        <meta property="og:description" content={description} />
        <meta property="og:type" content="website" />
        <meta property="og:url" content={Astro.url} />
        
        <!-- Twitter -->
        <meta name="twitter:card" content="summary" />
        <meta name="twitter:title" content={title} />
        <meta name="twitter:description" content={description} />

        <!-- Google Analytics -->
        <script type="text/partytown" nonce={nonce} async src="https://www.googletagmanager.com/gtag/js?id=G-KXJCF6VDEE"></script>
        <script type="text/partytown" nonce={nonce}>
            window.dataLayer = window.dataLayer || [];
            function gtag(){dataLayer.push(arguments);}
            gtag('js', new Date());
            gtag('config', 'G-KXJCF6VDEE');
        </script>

        <link rel="icon" type="image/x-icon" href="/favicon.ico" />
        
        <!-- Otimização de fonte usando sistema nativo do Astro 5 -->
        <link
            rel="preload"
            href="https://fonts.gstatic.com/s/inter/v13/UcC73FwrK3iLTeHuS_fvQtMwCp50KnMa1ZL7.woff2"
            as="font"
            type="font/woff2"
            crossorigin
        />
        
        <title>{title}</title>
        <ViewTransitions />

        <script nonce={nonce}>
            // Define uma função para configurar o tema
            const setTheme = () => {
                const theme = localStorage.getItem('theme') || 
                    (window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light');
                document.documentElement.classList.toggle('light-theme', theme === 'light');
            };

            // Executa imediatamente para evitar flash
            setTheme();

            // Registra os event listeners após o carregamento do documento
            document.addEventListener('astro:after-swap', setTheme);
            window.addEventListener('storage', (e) => e.key === 'theme' && setTheme());
        </script>
    </head>
    <body>
        <main id="main-content">
            <slot />
        </main>
    </body>
</html>

<style is:global>
@font-face {
    font-family: 'Inter';
    src: url('https://fonts.gstatic.com/s/inter/v13/UcC73FwrK3iLTeHuS_fvQtMwCp50KnMa1ZL7.woff2') format('woff2');
    font-weight: 400 700;
    font-style: normal;
    font-display: swap;
}

:root {
    color-scheme: dark light;
    
    /* Core colors */
    --primary-hue: 0;
    --primary-saturation: 65%;
    --primary-lightness: 55%;

    /* Theme variables */
    --primary-color: hsl(var(--primary-hue), var(--primary-saturation), var(--primary-lightness));
    --background-color: #2C2C2C;
    --text-color: #FFFFFF;
    --text-color-rgb: 255, 255, 255;
    --secondary-color: #3C3C3C;
    --border-color: rgba(255, 255, 255, 0.1);
    --text-color-secondary: #888;
    
    /* Accent colors */
    --accent-primary: var(--primary-color);
    --accent-secondary: hsl(var(--primary-hue), calc(var(--primary-saturation) - 10%), calc(var(--primary-lightness) + 5%));
    --accent-tertiary: hsl(var(--primary-hue), calc(var(--primary-saturation) - 20%), calc(var(--primary-lightness) + 10%));
    
    /* Interactive states */
    --focus-ring-color: var(--accent-tertiary);
    
    /* Animation tokens */
    --transition-duration: 0.2s;
    --transition-timing: ease;
    
    /* Layout tokens */
    --container-max-width: 1200px;
    --container-padding: 2rem;
    --border-radius: 12px;
    --card-shadow: 0 2px 8px;
}

:root.light-theme {
    --background-color: #FFF5E1;
    --text-color: #1A1A1A;
    --text-color-rgb: 26, 26, 26;
    --secondary-color: #FFF9EC;
    --border-color: rgba(0, 0, 0, 0.1);
    --text-color-secondary: #666;
}

/* Forced Colors Mode */
@media (forced-colors: active) {
    :root {
        --primary-color: CanvasText;
        --background-color: Canvas;
        --text-color: CanvasText;
        --secondary-color: Canvas;
        --border-color: CanvasText;
        --text-color-secondary: GrayText;
        --accent-primary: Highlight;
        --accent-secondary: Highlight;
        --accent-tertiary: Highlight;
        --focus-ring-color: Highlight;
    }

    * {
        forced-color-adjust: none;
    }

    a, button {
        forced-color-adjust: auto;
    }

    img {
        forced-color-adjust: auto;
    }
}

@media (prefers-reduced-motion: reduce) {
    *, ::before, ::after {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
        scroll-behavior: auto !important;
    }
}

html {
    font-family: 'Inter', system-ui, -apple-system, sans-serif;
    background: var(--background-color);
    color: var(--text-color);
    scroll-behavior: smooth;
    transition: background-color var(--transition-duration) var(--transition-timing);
    font-size: 16px;
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
}

body {
    margin: 0;
    padding: 0;
    min-height: 100vh;
    text-rendering: optimizeLegibility;
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
}

main {
    max-width: var(--container-max-width);
    margin: 0 auto;
    padding: 4rem var(--container-padding) 2rem;
}

@media (max-width: 768px) {
    :root {
        --container-padding: 1rem;
    }
    
    main {
        padding-top: 3.5rem;
    }
}

@media (max-width: 480px) {
    main {
        padding-top: 3rem;
    }
}

h1, h2, h3, h4, h5, h6 {
    color: var(--text-color);
    margin: 0;
    line-height: 1.2;
}

p {
    color: var(--text-color);
    line-height: 1.6;
    margin: 0;
}

.text-secondary {
    color: var(--text-color-secondary);
}

a {
    color: var(--primary-color);
    text-decoration: none;
    transition: color var(--transition-duration) var(--transition-timing);
}

a:hover {
    color: color-mix(in srgb, var(--primary-color) 80%, var(--background-color));
}

a:focus-visible, button:focus-visible {
    outline: 2px solid var(--focus-ring-color);
    outline-offset: 2px;
    border-radius: 4px;
}

.sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border: 0;
}

::selection {
    background: var(--primary-color);
    color: white;
}

img {
    max-width: 100%;
    height: auto;
    display: block;
}

* {
    -webkit-tap-highlight-color: transparent;
}
</style>
</html>
